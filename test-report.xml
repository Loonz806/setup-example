<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/Users/lpeters3/Projects/module-federation/setup-example/src/__tests__/counter.test.js">
    <testCase name="&lt;Counter/&gt; should " duration="46"/>
  </file>
  <file path="/Users/lpeters3/Projects/module-federation/setup-example/src/__tests__/errorBoundary.test.js">
    <testCase name="&lt;ErrorBoundry/&gt; shows the component when there is not" duration="32"/>
    <testCase name="&lt;ErrorBoundry/&gt; shows the component when there is not" duration="20"/>
    <testCase name="&lt;ErrorBoundry/&gt; throws warning if no fallback is given" duration="2"/>
  </file>
  <file path="/Users/lpeters3/Projects/module-federation/setup-example/src/__tests__/app.test.js">
    <testCase name="App Component show the title of the application" duration="119"/>
  </file>
  <file path="/Users/lpeters3/Projects/module-federation/setup-example/src/__tests__/sum.test.js">
    <testCase name="sum function should add two numbers together" duration="9"/>
    <testCase name="testing with jest matchers object assignment" duration="1"/>
    <testCase name="testing with jest matchers adding positive numbers is not zero" duration="13"/>
    <testCase name="testing with jest truthiness null" duration="1"/>
    <testCase name="testing with jest truthiness zero" duration="0"/>
    <testCase name="testing with jest numbers two plus two" duration="1"/>
    <testCase name="testing with jest numbers adding floating point numbers" duration="1"/>
    <testCase name="testing with jest strings there is no I in team" duration="0"/>
    <testCase name="testing with jest strings but there is a &quot;stop&quot; in Christoph" duration="1"/>
    <testCase name="testing with jest arrays and iterables the shopping list has beer on it" duration="0"/>
    <testCase name="testing with jest exceptions compiling android goes as expected" duration="4"/>
    <testCase name="testing with jest callbacks the data is peanut butter" duration="104"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the data is peanut butter, then" duration="105"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the fetch fails with an error, catch" duration="105"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the data is peanut butter, resolves" duration="104"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the fetch fails with an error, rejects" duration="105"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the data is peanut butter" duration="106"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the fetch fails with an error" duration="103"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the data is peanut butter" duration="104"/>
    <testCase name="testing with jest promises/resolve/reject/catch/async/await the fetch fails with an error" duration="101"/>
    <testCase name="testing with jest should check truth" duration="0"/>
  </file>
</testExecutions>