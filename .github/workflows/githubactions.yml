name: Github Actions CI
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run lint
      - run: npm run format
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run coverage
  e2e_visual_a11y:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run e2e:test
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get main
      run: git fetch origin main
    - name: Install dependencies
      run: npm install
    - name: Install Jest globally
      run: sudo npm install -g jest
    - name: Run Tests
      run: npm run browserupdate-coverage
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  lighthouseci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm install && npm install -g @lhci/cli@0.7.x
      - run: npm run build
      - run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs: [lint, test, e2e_visual_a11y, lighthouseci, sonarcloud]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Install and Build üîß # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm install
          npm run build
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: dist # The folder the action should deploy.
          clean: true # Automatically remove deleted files from the deploy branch
